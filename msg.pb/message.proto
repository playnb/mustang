package msg;

message LoginRequst{
	optional uint32 service_type = 1; //服务类型
	optional string service_ip = 2; //服务IP
}

message LoginRespose{
	optional uint32 ret_code = 1; //返回值
	optional uint32 service_type = 2; //服务类型
	optional uint64 service_id = 3; //服务编号
	optional string service_ip = 4; //服务IP
	optional uint32 exter_port = 5; //外网端口
}

message Ping{
	optional uint64 service_id = 1; //服务器编号
	optional uint32 timestamp = 2; //时间戳
}

message Pong{
	optional uint64 service_id = 1; //服务器编号
	optional uint32 timestamp = 2; //时间戳
}

enum OAtuhRetCode{
	AUTH_OK = 0;
	TOKEN_NOT_FOUND = 1;
	SINA_AUTH_FAILED = 2;
}

message OAtuhUserProfile{
	optional uint64 accid = 1;
	optional string oauth = 2;
	optional string name = 3;
}

message OAtuhTokenLogin{
	optional string token = 1;
}

message OAuth2Request{
	optional uint64 accid = 1;
	optional uint64 auth_sid = 2;
}

message OAuth2Url{
	optional uint64 accid = 1;
	optional uint64 auth_sid = 2;
	optional string url = 3;
}

message OAuth2Response{
	optional uint64 accid = 1;
	optional uint64 auth_sid = 2;
	optional uint32 ret_code = 3;
	optional OAtuhUserProfile user = 4;
}

//============================================

service SuperService
{
	rpc Echo(Ping) returns (Pong);
	rpc Login(LoginRequst) returns (LoginRespose);
	rpc AuthByToken(OAtuhTokenLogin) returns (OAuth2Response);
	rpc GetAuthUrlBySina(OAuth2Request) returns (OAuth2Url);
	rpc WaitAuthResultBySina(OAuth2Request) returns (OAuth2Response);
};
